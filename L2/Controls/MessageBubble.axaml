<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vkui="using:VKUI.Controls"
        xmlns:i18n="using:ELOR.Laney.Core.Localization"
        xmlns:controls="using:ELOR.Laney.Controls"
        xmlns:atch="using:ELOR.Laney.Controls.Attachments"
        xmlns:ctb="using:ColorTextBlock.Avalonia">
  <Design.PreviewWith>
    <StackPanel Width="432">
      <controls:MessageBubble />
    </StackPanel>
  </Design.PreviewWith>

  <Style Selector="controls|MessageBubble">
    <!-- Set Defaults -->
    <Setter Property="Template">
      <ControlTemplate>
        <Grid x:Name="MessageUIRoot" ColumnDefinitions="Auto *" Margin="12,4" MaxWidth="894">
          <Button x:Name="AvatarButton" Classes="Tertiary" Padding="0" VerticalAlignment="Bottom" Margin="0,0,8,2" Width="32" Height="32">
            <vkui:Avatar x:Name="SenderAvatar" Foreground="White"
                       Initials="{Binding Message.SenderName, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ic}}"
                       Background="{Binding Message.SenderId, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource agc}}"
                       controls:ImageLoader.Image="{Binding Message.SenderAvatar, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Button>
          <Grid x:Name="BubbleRoot" RowDefinitions="* Auto" Grid.Column="1" MinHeight="36" MinWidth="48" MaxWidth="420" HorizontalAlignment="Left" ToolTip.Tip="{Binding Message.UIType, RelativeSource={RelativeSource TemplatedParent}}">
            <Border x:Name="BubbleBackground" Grid.RowSpan="2" CornerRadius="18"/>
            <StackPanel x:Name="MessageContent">
              <Border x:Name="SenderNameWrap">
                <TextBlock x:Name="SenderName" Margin="12,7,12,0" Classes="Caption1" FontWeight="SemiBold" Foreground="{DynamicResource VKImTextNameBrush}" Text="{Binding Message.SenderName, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Message.IsSenderNameVisible, RelativeSource={RelativeSource TemplatedParent}}"/>
              </Border>
              <Button x:Name="ReplyMessageButton" Classes="Tertiary" Margin="12,6,12,4" Padding="0" CornerRadius="0" IsVisible="{Binding Message.ReplyMessage, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNotNull}}">
                <DockPanel>
                  <Rectangle Fill="{DynamicResource VKImTextNameBrush}" Width="2" RadiusX="1" RadiusY="1" Margin="0,0,6,0" VerticalAlignment="Stretch"/>
                  <controls:CompactMessage Message="{Binding Message.ReplyMessage, RelativeSource={RelativeSource TemplatedParent}}"/>
                </DockPanel>
              </Button>
              <atch:GiftUI x:Name="Gift" Margin="4,4,4,0"/>
              <ctb:CTextBlock x:Name="MessageText" Margin="12,0,12,8" FontSize="16" LineHeight="20" TextWrapping="Wrap" Foreground="{DynamicResource VKTextPrimaryBrush}" IsVisible="{Binding Message.Text, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
              <atch:AttachmentsContainer x:Name="MessageAttachments" IsVisible="{Binding Message.Attachments.Count, RelativeSource={RelativeSource TemplatedParent}}"/>
              <Rectangle x:Name="Map" Margin="4,0,4,4" IsVisible="{Binding Message.Location, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNotNull}}" RadiusX="14" RadiusY="14"/>
              <Border x:Name="ForwardedMessagesContainer" Margin="12,8,12,22" IsVisible="{Binding Message.ForwardedMessages.Count, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{DynamicResource VKImForwardLineTintBrush}" BorderThickness="2,0,0,0">
                <StackPanel x:Name="ForwardedMessagesStack" Margin="4,0,0,0"/>
              </Border>
            </StackPanel>
            <Border x:Name="IndicatorContainer" Height="20" CornerRadius="10" HorizontalAlignment="Right" VerticalAlignment="Bottom" Classes="DefaultIndicator">
              <StackPanel x:Name="IndicatorStack" Orientation="Horizontal" Margin="6,4,6,2">
                <vkui:VKIcon x:Name="ImportantIndicator" Id="Icon12Favorite" Width="12" Height="12" Margin="0,-1,4,0" IsVisible="{Binding Message.IsImportant, RelativeSource={RelativeSource TemplatedParent}}"/>
                <TextBlock x:Name="EditedIndicator" Classes="Caption3" Text="{i18n:Localize edited_indicator}" Margin="0,0,4,0" IsVisible="{Binding Message.EditTime, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNotNull}}"/>
                <TextBlock x:Name="TimeIndicator" Classes="Caption3"/>
                <vkui:VKIcon x:Name="StateIndicator" Id="Icon16CheckDoubleOutline" Width="12" Height="12" Margin="4,-1,0,0"/>
              </StackPanel>
            </Border>
            <controls:BotKeyboardUI x:Name="BotKeyboard" Grid.Row="1" Margin="12,4,12,12" MinWidth="296" Keyboard="{Binding Message.Keyboard, RelativeSource={RelativeSource TemplatedParent}}" IsVisible="{Binding Message.Keyboard, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNotNull}}"/>
            <Ellipse x:Name="ReadIndicator" Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,2,1" Width="8" Height="8" Fill="{DynamicResource VKAccentBrush}" Stroke="{DynamicResource VKBackgroundContentBrush}" StrokeThickness="1"/>
          </Grid>
        </Grid>
      </ControlTemplate>
    </Setter>
  </Style>

  <Style Selector="Border.IncomingMessageBackground">
    <Setter Property="Background" Value="{DynamicResource VKImBubbleIncomingAlternateBrush}"/>
  </Style>
  
  <Style Selector="Border.OutgoingMessageBackground">
    <Setter Property="Background" Value="{DynamicResource VKImBubbleOutgoingBrush}"/>
  </Style>
  
  <Style Selector="Border.GiftMessageBackground">
    <Setter Property="Background" Value="{DynamicResource VKImBubbleGiftBackgroundBrush}"/>
  </Style>

  <Style Selector="Border.BorderMessageBackground">
    <Setter Property="Background" Value="{DynamicResource VKBackgroundContentBrush}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource VKImageBorderBrush}"/>
    <Setter Property="BorderThickness" Value="1"/>
  </Style>

  <!-- Time & indicators -->
  
  <Style Selector="Border.DefaultIndicator">
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="Margin" Value="0,0,5,2"/>
  </Style>

  <Style Selector="Border.DefaultIndicator > StackPanel#IndicatorStack > TextBlock">
    <Setter Property="Foreground" Value="{DynamicResource VKTextSecondaryBrush}"/>
  </Style>

  <Style Selector="Border.DefaultIndicator > StackPanel#IndicatorStack > vkui|VKIcon">
    <Setter Property="Foreground" Value="{DynamicResource VKTextSecondaryBrush}"/>
  </Style>

  
  <Style Selector="Border.ImageIndicator">
    <Setter Property="Background" Value="#59000000"/>
    <Setter Property="Margin" Value="0,0,5,5"/>
  </Style>

  <Style Selector="Border.ComplexImageIndicator">
    <Setter Property="Background" Value="#59000000"/>
    <Setter Property="Margin" Value="0,0,9,9"/>
  </Style>
  
  <Style Selector="Border.ImageIndicator > StackPanel#IndicatorStack > TextBlock, Border.ComplexImageIndicator > StackPanel#IndicatorStack > TextBlock">
    <Setter Property="Foreground" Value="White"/>
  </Style>

  <Style Selector="Border.ImageIndicator > StackPanel#IndicatorStack > vkui|VKIcon, Border.ComplexImageIndicator > StackPanel#IndicatorStack > vkui|VKIcon">
    <Setter Property="Foreground" Value="White"/>
  </Style>

</Styles>